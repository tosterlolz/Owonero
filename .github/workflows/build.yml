name: Build Owonero

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Override version (leave empty to use from main.go)'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: windows-latest
            goos: windows
            goarch: amd64
            binary_name: owonero-amd64.exe
          - os: windows-latest
            goos: windows
            goarch: 386
            binary_name: owonero-x86.exe
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            binary_name: owonero-amd64
          - os: ubuntu-latest
            goos: linux
            goarch: 386
            binary_name: owonero-x86
          - os: ubuntu-latest
            goos: linux
            goarch: arm64
            binary_name: owonero-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: |
        if [ -n "${{ github.event.inputs.version }}" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          VERSION=$(grep 'const ver = ' src/main.go | sed 's/.*= "\(.*\)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi

    - name: Build binary
      run: |
        mkdir -p bin
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o bin/${{ matrix.binary_name }} ./src

    - name: Test binary (Linux only)
      if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
      run: |
        ./bin/${{ matrix.binary_name }} --help || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: owonero-${{ matrix.goos }}-${{ matrix.goarch }}
        path: bin/${{ matrix.binary_name }}
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version
      id: version
      run: |
        VERSION=$(grep 'const ver = ' src/main.go | sed 's/.*= "\(.*\)".*/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create zip archives
      run: |
        mkdir -p releases
        for dir in artifacts/*/; do
          if [ -d "$dir" ]; then
            dirname=$(basename "$dir")
            cd "$dir"
            zip -r "../../releases/${dirname}.zip" .
            cd ../..
          fi
        done
        ls -la releases/

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Owonero ${{ steps.version.outputs.version }}
        body: |
          Automated release of Owonero ${{ steps.version.outputs.version }}

          Built on ${{ github.event.head_commit.timestamp }}

          ## Build targets
          - Windows AMD64
          - Windows 386
          - Linux AMD64
          - Linux 386
          - Linux ARM64

          ## Downloads
          Download the appropriate zip file for your platform from the assets below.
        files: releases/*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}